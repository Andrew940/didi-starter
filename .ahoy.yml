ahoyapi: v2
commands:
  build:
    usage: Build the ros:nvidia docker image that 'ahoy ros' uses.
    cmd: docker build -t ros:nvidia .
  ros:
    usage: Run a command in a ros gpu and GUI support
    cmd: | 
      nvidia-docker run -it --rm \
      --volume=/dev/dri \
      --env="DISPLAY"  \
      --env="ROS_MASTER_URI=http://master:11311"  \
      --env="QT_X11_NO_MITSHM=1" \
      --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
      --volume=`pwd`:/src \
      --network="didi-net" \
      ros:nvidia \
      "$@"
  ros-d:
    usage: (daemonized) Run a command in a ros gpu and GUI support
    cmd: | 
      nvidia-docker run -d --rm \
      --volume=/dev/dri \
      --env="DISPLAY"  \
      --env="ROS_MASTER_URI=http://master:11311"  \
      --env="QT_X11_NO_MITSHM=1" \
      --volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
      --volume=`pwd`:/src \
      --network="didi-net" \
      ros:nvidia \
      "$@"
  bash:
    usage: Start a container and login to it using bash
    cmd: ahoy ros bash

  # ROS COMMANDS
  rviz:
    usage: ROS visualization tool
    cmd: ahoy ros-d rosrun rviz rviz -d default.rviz
  rqt_bag:
    usage: ROS bag visualizer
    cmd: ahoy ros-d rqt_bag
  rosbag:
    usage: rosbag command, used to store or play messages in bags
    cmd: ahoy ros rosbag "$@"


  # UTILITY COMMANDS
  network-up:
    usage: Create the docker network 'didi-net'
    cmd: docker network create -d bridge didi-net
  network-down:
    usage: Delete the docker network 'didi-net'
    cmd: docker network rm didi-net
  x-up:
    usage: Enable Xserver to accept connections from docker.
    cmd: xhost +local:root
  x-down:
    usage: Disable Xserver listening from docker.
    cmd: xhost -local:root
  core-up:
    usage: Bring up the core containers
    cmd: docker-compose up -d
  core-down:
    usage: Stop the core containers
    cmd: docker-compose stop    
